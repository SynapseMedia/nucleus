make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Tue May 17 14:30:21 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 6)
PYTEST = env PYTHONPATH=${PYTHONPATH} PYTEST=1 ${VENV}/bin/py.test -c ./conftest.py --no-header -v
# environment
XDG_SESSION_CLASS = user
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 1
# makefile (from 'Makefile', line 13)
DEFAULT_PYTHON := /usr/bin/python3
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/gmena/PycharmProjects/watchit-toolkit
# makefile (from 'Makefile', line 1)
SHELL := /bin/bash
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/share/code/code
# environment
JOURNAL_STREAM = 8:53925
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile (from 'Makefile', line 11)
PIP = ${VENV}/bin/pip3
# environment
USERNAME = gmena
# environment
MAKELEVEL := 0
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
INFOPATH = /home/linuxbrew/.linuxbrew/share/info:
# environment
MANAGERPID = 2030
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-ecb4c199-cf5e-46fd-8d0a-894385f3ac5f.sock
# environment
LC_NAME = es_NI.UTF-8
# environment
VSCODE_CWD = /home/gmena
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/gmena/golang/go/bin:/home/gmena/.cargo/bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/home/gmena/.local/bin:/home/gmena/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/usr/local/go/bin
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
SESSION_MANAGER = local/gmena-ThinkPad-P70:@/tmp/.ICE-unix/2453,unix/gmena-ThinkPad-P70:/tmp/.ICE-unix/2453
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
INVOCATION_ID = b05d88ab21bb486e92ba72cee5cbad46
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 1254771
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/gmena/PycharmProjects/watchit-toolkit
# default
.LOADED := 
# environment
SSH_AGENT_PID = 2418
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from 'Makefile', line 8)
COVERAGE = env PYTHONPATH=${PYTHONPATH} ${VENV}/bin/coverage
# makefile (from 'Makefile', line 10)
PYTHON = env PYTHONPATH=${PYTHONPATH} ${VENV}/bin/python
# environment
MANPATH = /home/linuxbrew/.linuxbrew/share/man:
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/gmena
# environment
HOMEBREW_CELLAR = /home/linuxbrew/.linuxbrew/Cellar
# environment
VSCODE_CODE_CACHE_PATH = /home/gmena/.config/Code/CachedData/57fd6d0195bb9b9d1b49f6da5db789060795de47
# environment
LOGNAME = gmena
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
LC_TIME = es_NI.UTF-8
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SHLVL = 0
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# default
MAKE_VERSION := 4.2.1
# environment
USER = gmena
# environment
LC_MONETARY = es_NI.UTF-8
# makefile
.DEFAULT_GOAL := default
# environment
XDG_CURRENT_DESKTOP = Unity
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 5)
VENV = .venv
# environment
LC_TELEPHONE = es_NI.UTF-8
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 9)
BLACKFIX = env PYTHONPATH=${PYTHONPATH} ${VENV}/bin/black
# default
.VARIABLES := 
# makefile (from 'Makefile', line 14)
VIRTUALENV := /usr/bin/virtualenv
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-114bb07b-1.67.0-main.sock
# makefile (from 'Makefile', line 4)
PYTHONPATH = .
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
HOMEBREW_SHELLENV_PREFIX = /home/linuxbrew/.linuxbrew
# environment
HOMEBREW_PREFIX = /home/linuxbrew/.linuxbrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 3)
PYTHON_MODULES = src
# environment
GDK_BACKEND = x11
# environment
LC_PAPER = es_NI.UTF-8
# environment
HOMEBREW_REPOSITORY = /home/linuxbrew/.linuxbrew/Homebrew
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'Makefile', line 7)
FLAKE8 = env PYTHONPATH=${PYTHONPATH} ${VENV}/bin/flake8 --config=.config/flake8.ini
# default
MAKEFILES := 
# environment
LC_NUMERIC = es_NI.UTF-8
# automatic
<F = $(notdir $<)
# environment
LC_MEASUREMENT = es_NI.UTF-8
# environment
LC_ALL = C
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
LC_IDENTIFICATION = es_NI.UTF-8
# makefile (from 'Makefile', line 15)
REQUIREMENTS := -r requirements.txt
# default
.RECIPEPREFIX := 
# environment
LC_ADDRESS = es_NI.UTF-8
# environment
LANG = C
# environment
VSCODE_PID = 1254771
# variable set hash-table stats:
# Load=121/1024=12%, Rehash=0, Collisions=21/147=14%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66311, inode 20447741): 56 files, no impossibilities.

# 56 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

.PHONY: default venv requirements bootstrap check-coding-style test test-coverage
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

check-coding-style: venv
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 38):
	${FLAKE8} ${PYTHON_MODULES}

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-04-14 11:49:08.114611235
#  File has been updated.
#  Successfully updated.
 
make: *** No rule to make target 'all'.  Stop.


setup-env:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 20):
	virtualenv --python=python3 -q .venv
	python -m pip install --upgrade pip
	npm i

bootstrap: setup-env venv requirements
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 40):
	${PYTEST} ${PYTHON_MODULES} --disable-pytest-warnings

test-check:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 46):
	${PYTEST} ${PYTHON_MODULES}

default: check-coding-style
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

test-coverage: check-coding-style test
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 42):
	${COVERAGE} run --source=./src ${VENV}/bin/py.test
	${COVERAGE} report
	${COVERAGE} html

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

venv:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 24):
	test -d ${VENV} || ${VIRTUALENV} -p ${DEFAULT_PYTHON} -q ${VENV}

fix-coding-style: venv
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 36):
	${BLACKFIX} ${PYTHON_MODULES}

requirements:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 27):
	@if [ -d wheelhouse ]; then \
		${PIP} install -q --no-index --find-links=wheelhouse ${REQUIREMENTS}; \
	else \
		${PIP} install --no-cache-dir --force-reinstall ${REQUIREMENTS}; \
	fi

# files hash-table stats:
# Load=15/1024=1%, Rehash=0, Collisions=2/41=5%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 72 / storage = 1168 B / avg = 16 B
# current buf: size = 8162 B / used = 1168 B / count = 72 / avg = 16 B

# strcache performance: lookups = 102 / hit rate = 29%
# hash-table stats:
# Load=72/8192=1%, Rehash=0, Collisions=1/102=1%
# Finished Make data base on Tue May 17 14:30:21 2022

 
