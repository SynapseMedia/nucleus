
[project]
# This is the name of your project. The first time you publish this
# package, this name will be registered for you. It will determine how
# users can install this project, e.g.:
#
# $ pip install nucleus
#
# And where it will live on PyPI: https://pypi.org/project/sampleproject/
#
# There are some restrictions on what makes a valid project name
# specification here:
# https://packaging.python.org/specifications/core-metadata/#name
name = "nucleus-sdk" # Required

# Versions should comply with PEP 440:
# https://www.python.org/dev/peps/pep-0440/
#
# For a discussion on single-sourcing the version, see
# https://peps.python.org/pep-0440/#version-scheme
# https://packaging.python.org/guides/single-sourcing-package-version/
version = "0.1a5" # Required

# This is a one-line description or tagline of what your project does. This
# corresponds to the "Summary" metadata field:
# https://packaging.python.org/specifications/core-metadata/#summary
description = "The building block for decentralized media" # Optional

# This is an optional longer description of your project that represents
# the body of text which users will see when they visit PyPI.
#
# Often, this is the same as your README, so you can just read it in from
# that file directly (as we have already done above)
#
# This field corresponds to the "Description" metadata field:
# https://packaging.python.org/specifications/core-metadata/#description-optional
readme = "README.md" # Optional

# Specify which Python versions you support. In contrast to the
# 'Programming Language' classifiers above, 'pip install' will check this
# and refuse to install the project if the version does not match. See
# https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires
requires-python = ">=3.10"

# This is either text indicating the license for the distribution, or a file
# that contains the license
# https://packaging.python.org/en/latest/specifications/core-metadata/#license
license = {file = "LICENSE"}

# This field adds keywords for your project which will appear on the
# project page. What does your project relate to?
#
# Note that this is a list of additional keywords, separated
# by commas, to be used to assist searching for the distribution in a
# larger catalog.
keywords = ["decentralization", "media", "development"] # Optional

# This should be your name or the name of the organization who originally
# authored the project, and a valid email address corresponding to the name
# listed.
authors = [
  {name = "Synapse", email = "gmjun2000@gmail.com"}, # Optional
]

# This should be your name or the names of the organization who currently
# maintains the project, and a valid email address corresponding to the name
# listed.
maintainers = [
  {name = "Geolffrey Mena", email = "gmjun2000@gmail.com"}, # Optional
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha", # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Topic :: Software Development :: Build Tools", # Pick your license as you wish
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  'Programming Language :: Python :: 3 :: Only',
]

# This field lists other packages that your project depends on to run.
# Any package you put here will be installed by pip when your project is
# installed, so they must be valid existing projects.
#
# For an analysis of this field vs pip's requirements files see:
# https://packaging.python.org/discussions/install-requires-vs-requirements/
dependencies = [
    "ffmpeg-python>=0.2.0",
    "pydantic>=1.10.1",
    "hexbytes>=0.2.2",
    "multiformats>=0.2.1",
    "dag-cbor>=0.3.2",
    "Pillow>=9.2.0",
    "requests>=2.27.1",
    "rich>=13.3.5",
    "jwcrypto>=1.4.2",
    "web3>=6.4.0",
    "setuptools>=67.8.0",
    "urllib3>=2.0.3",
]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Similar to `dependencies` above, these must be valid existing
# projects.
[project.urls] # Optional
"Bug Reports" = "https://github.com/SynapseMedia/nucleus/issues"
"Funding" = "https://opencollective.com/synapse"
"Homepage" = "https://github.com/SynapseMedia/nucleus"
"Source" = "https://opencollective.com/synapse"


[build-system]
requires = ['hatchling', 'hatch-fancy-pypi-readme>=22.5.0']
build-backend = 'hatchling.build'

[tool.hatch.build.targets.sdist]
# limit which files are included in the sdist (.tar.gz) asset,
# see https://github.com/pydantic/pydantic/pull/4542
include = [
    '/README.md',
    '/Makefile',
    '/nucleus',
    '/tests',
]


[tool.coverage.run]
source = ['nucleus']
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
sournce = ['nucleus']

[tool.black]
color = true
line-length = 120
skip-string-normalization = true
target-version = ['py310']

[tool.ruff]
exclude = ["nucleus/core/types.py"]
extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I']
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
isort = {known-first-party = ['nucleus', 'tests']}
line-length = 120
mccabe = {max-complexity = 14}
target-version = "py310"

[tool.pytest.ini_options]
addopts = "--durations=10 -v"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.pyright]
exclude = ['tests/']
include = ['nucleus/']

[tool.codespell]
skip = '.git,env*'

[tool.pdm.resolution.overrides]
myst-parser = "1.0.0"
sphinx = "7.0.0"

[tool.pdm.dev-dependencies]
lint = [
  "black>=23.3.0",
  "ruff>=0.0.269",
]
static = [
    "codespell>=2.2.4",
    "mypi>=0.0.3",
    "pyright>=1.1.310",
]
test = [
    "pytest>=7.3.1",
    "coverage[toml]>=7.2.5",
    "responses>=0.23.1",
    "mock>=5.0.2",
    "pre-commit>=3.3.2",
    "commitizen>=3.2.2",
]
docs = [
    "mkdocs>=1.4.3",
    "mkdocs-include-markdown-plugin>=3.9.1",
    "mkdocstrings-python>=1.0.0",
    "mkdocs-material>=9.1.15",
    "mkdocs-glightbox>=0.3.4",
]
